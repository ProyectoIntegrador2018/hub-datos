{"ast":null,"code":"var _jsxFileName = \"/Users/emilioalonso/Documents/Integrador/hub-datos/src/Proyectos.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport CardRow from \"./components/CardRow\";\nimport \"./App.css\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\n\nfunction Proyectos() {\n  const [projects, setProjects] = useState(null);\n  useEffect(() => {\n    const fetchProjects = async () => {\n      /* insert fetching code later */\n      // split projects into chunks of 5 to map in the card rows\n      let projectList = [{\n        title: \"10K Challenge\",\n        description: \"10K Description\",\n        route: \"#10KChallenge\"\n      }, {\n        title: \"Universities for Founders MTY\",\n        description: \"Universities for Founders Description\",\n        route: \"#UniversitiesForFounders\"\n      }];\n      const projectChunks = [];\n\n      while (projectList.length) {\n        projectChunks.push(projectList.splice(0, 5));\n      }\n\n      setProjects(projectChunks);\n    };\n\n    fetchProjects();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"px-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Proyectos\"), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, projects ? projects.map((projectDeck, i) => /*#__PURE__*/React.createElement(CardRow, {\n    projects: projectDeck,\n    rowNumber: i + 1,\n    key: `project_row_${i}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  })) : \"\"))));\n}\n\nexport default Proyectos;","map":{"version":3,"sources":["/Users/emilioalonso/Documents/Integrador/hub-datos/src/Proyectos.js"],"names":["React","useEffect","useState","Container","CardRow","Col","Row","Proyectos","projects","setProjects","fetchProjects","projectList","title","description","route","projectChunks","length","push","splice","map","projectDeck","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAO,WAAP;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;;AAEA,SAASC,SAAT,GAAqB;AACnB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,IAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,aAAa,GAAG,YAAY;AAChC;AAEA;AACA,UAAIC,WAAW,GAAG,CAChB;AACEC,QAAAA,KAAK,EAAE,eADT;AAEEC,QAAAA,WAAW,EAAE,iBAFf;AAGEC,QAAAA,KAAK,EAAE;AAHT,OADgB,EAMhB;AACEF,QAAAA,KAAK,EAAE,+BADT;AAEEC,QAAAA,WAAW,EAAE,uCAFf;AAGEC,QAAAA,KAAK,EAAE;AAHT,OANgB,CAAlB;AAaA,YAAMC,aAAa,GAAG,EAAtB;;AACA,aAAOJ,WAAW,CAACK,MAAnB,EAA2B;AACzBD,QAAAA,aAAa,CAACE,IAAd,CAAmBN,WAAW,CAACO,MAAZ,CAAmB,CAAnB,EAAsB,CAAtB,CAAnB;AACD;;AAEDT,MAAAA,WAAW,CAACM,aAAD,CAAX;AACD,KAvBD;;AAyBAL,IAAAA,aAAa;AACd,GA3BQ,EA2BN,EA3BM,CAAT;AA6BA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAiB,IAAA,SAAS,EAAC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QAAQ,GAAGA,QAAQ,CAACW,GAAT,CAAa,CAACC,WAAD,EAAcC,CAAd,kBACvB,oBAAC,OAAD;AACE,IAAA,QAAQ,EAAED,WADZ;AAEE,IAAA,SAAS,EAAEC,CAAC,GAAC,CAFf;AAGE,IAAA,GAAG,EAAG,eAAcA,CAAE,EAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADU,CAAH,GAMJ,EAPP,CADF,CAFF,CADF,CADF;AAkBD;;AAED,eAAed,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport CardRow from \"./components/CardRow\";\nimport \"./App.css\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\n\nfunction Proyectos() {\n  const [projects, setProjects] = useState(null);\n\n  useEffect(() => {\n    const fetchProjects = async () => {\n      /* insert fetching code later */\n\n      // split projects into chunks of 5 to map in the card rows\n      let projectList = [\n        {\n          title: \"10K Challenge\",\n          description: \"10K Description\",\n          route: \"#10KChallenge\",\n        },\n        {\n          title: \"Universities for Founders MTY\",\n          description: \"Universities for Founders Description\",\n          route: \"#UniversitiesForFounders\",\n        },\n      ];\n\n      const projectChunks = [];\n      while (projectList.length) {\n        projectChunks.push(projectList.splice(0, 5));\n      }\n\n      setProjects(projectChunks);\n    };\n\n    fetchProjects();\n  }, []);\n\n  return (\n    <div>\n      <Container fluid className=\"px-5\">\n        <h1>Proyectos</h1>\n        <Row>\n          <Col>\n            {projects ? projects.map((projectDeck, i) => (\n              <CardRow\n                projects={projectDeck}\n                rowNumber={i+1}\n                key={`project_row_${i}`}\n              />\n            )) : \"\"}\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default Proyectos;\n"]},"metadata":{},"sourceType":"module"}