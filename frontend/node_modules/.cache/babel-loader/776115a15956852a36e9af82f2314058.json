{"ast":null,"code":"var _jsxFileName = \"/Users/emilioalonso/Documents/Integrador/hub-datos/src/Proyectos.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport CardRow from \"./components/CardRow\";\nimport \"./App.css\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport { CardColumns } from \"react-bootstrap\";\nimport CardComponent from \"./components/CardComponent\";\n\nfunction Proyectos() {\n  const [projects, setProjects] = useState(null);\n\n  const splitProjects = projectList => {\n    // split projects into chunks of 5 to map in the card rows\n    const projectChunks = [];\n\n    while (projectList.length) {\n      projectChunks.push(projectList.splice(0, 5));\n    }\n\n    return projectChunks;\n  };\n\n  useEffect(() => {\n    const fetchProjects = async () => {\n      /* code needed later to fetch data needed for the page\n      const { data } = await axios(`${URI}/ruta/del/endpoint`);\n      const { totalPages, page } = data;\n      const projectList = data.projects;\n      */\n      // mock data for the time being\n      let projectList = [{\n        title: \"10K Challenge\",\n        description: \"10K Description\",\n        route: \"#10KChallenge\"\n      }, {\n        title: \"Universities for Founders MTY\",\n        description: \"Universities for Founders Description\",\n        route: \"#UniversitiesForFounders\"\n      }, {\n        title: \"Universities for Founders MTY\",\n        description: \"Universities for Founders Description\",\n        route: \"#UniversitiesForFounders\"\n      }, {\n        title: \"Universities for Founders MTY\",\n        description: \"Universities for Founders Description\",\n        route: \"#UniversitiesForFounders\"\n      }, {\n        title: \"Universities for Founders MTY\",\n        description: \"Universities for Founders Description\",\n        route: \"#UniversitiesForFounders\"\n      }, {\n        title: \"Universities for Founders MTY\",\n        description: \"Universities for Founders Description\",\n        route: \"#UniversitiesForFounders\"\n      }]; //const projectChunks = splitProjects(projectList);\n\n      setProjects(projectList);\n    };\n\n    fetchProjects();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"px-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"Proyectos\"), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardColumns, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, projects ? projects.map((project, i) => /*#__PURE__*/React.createElement(CardComponent, {\n    title: project.title,\n    description: project.useEffect,\n    route: project.route,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  })) : \"\")))));\n}\n\nexport default Proyectos;","map":{"version":3,"sources":["/Users/emilioalonso/Documents/Integrador/hub-datos/src/Proyectos.js"],"names":["React","useEffect","useState","Container","CardRow","Col","Row","CardColumns","CardComponent","Proyectos","projects","setProjects","splitProjects","projectList","projectChunks","length","push","splice","fetchProjects","title","description","route","map","project","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAO,WAAP;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,OAAOC,aAAP,MAA0B,4BAA1B;;AAEA,SAASC,SAAT,GAAqB;AACnB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,IAAD,CAAxC;;AAEA,QAAMU,aAAa,GAAIC,WAAD,IAAiB;AACrC;AACA,UAAMC,aAAa,GAAG,EAAtB;;AACA,WAAOD,WAAW,CAACE,MAAnB,EAA2B;AACzBD,MAAAA,aAAa,CAACE,IAAd,CAAmBH,WAAW,CAACI,MAAZ,CAAmB,CAAnB,EAAsB,CAAtB,CAAnB;AACD;;AAED,WAAOH,aAAP;AACD,GARD;;AAUAb,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,aAAa,GAAG,YAAY;AAChC;;;;;AAMA;AACA,UAAIL,WAAW,GAAG,CAChB;AACEM,QAAAA,KAAK,EAAE,eADT;AAEEC,QAAAA,WAAW,EAAE,iBAFf;AAGEC,QAAAA,KAAK,EAAE;AAHT,OADgB,EAMhB;AACEF,QAAAA,KAAK,EAAE,+BADT;AAEEC,QAAAA,WAAW,EAAE,uCAFf;AAGEC,QAAAA,KAAK,EAAE;AAHT,OANgB,EAWhB;AACEF,QAAAA,KAAK,EAAE,+BADT;AAEEC,QAAAA,WAAW,EAAE,uCAFf;AAGEC,QAAAA,KAAK,EAAE;AAHT,OAXgB,EAgBhB;AACEF,QAAAA,KAAK,EAAE,+BADT;AAEEC,QAAAA,WAAW,EAAE,uCAFf;AAGEC,QAAAA,KAAK,EAAE;AAHT,OAhBgB,EAqBhB;AACEF,QAAAA,KAAK,EAAE,+BADT;AAEEC,QAAAA,WAAW,EAAE,uCAFf;AAGEC,QAAAA,KAAK,EAAE;AAHT,OArBgB,EA0BhB;AACEF,QAAAA,KAAK,EAAE,+BADT;AAEEC,QAAAA,WAAW,EAAE,uCAFf;AAGEC,QAAAA,KAAK,EAAE;AAHT,OA1BgB,CAAlB,CARgC,CAyChC;;AAEAV,MAAAA,WAAW,CAACE,WAAD,CAAX;AACD,KA5CD;;AA8CAK,IAAAA,aAAa;AACd,GAhDQ,EAgDN,EAhDM,CAAT;AAkDA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAiB,IAAA,SAAS,EAAC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,QAAQ,GACLA,QAAQ,CAACY,GAAT,CAAa,CAACC,OAAD,EAAUC,CAAV,kBACX,oBAAC,aAAD;AACE,IAAA,KAAK,EAAED,OAAO,CAACJ,KADjB;AAEE,IAAA,WAAW,EAAEI,OAAO,CAACtB,SAFvB;AAGE,IAAA,KAAK,EAAEsB,OAAO,CAACF,KAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADK,GAQL,EATN,CADF,CADF,CAFF,CADF,CADF;AAsBD;;AAED,eAAeZ,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport CardRow from \"./components/CardRow\";\nimport \"./App.css\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport { CardColumns } from \"react-bootstrap\";\nimport CardComponent from \"./components/CardComponent\";\n\nfunction Proyectos() {\n  const [projects, setProjects] = useState(null);\n\n  const splitProjects = (projectList) => {\n    // split projects into chunks of 5 to map in the card rows\n    const projectChunks = [];\n    while (projectList.length) {\n      projectChunks.push(projectList.splice(0, 5));\n    }\n\n    return projectChunks;\n  };\n\n  useEffect(() => {\n    const fetchProjects = async () => {\n      /* code needed later to fetch data needed for the page\n      const { data } = await axios(`${URI}/ruta/del/endpoint`);\n      const { totalPages, page } = data;\n      const projectList = data.projects;\n      */\n\n      // mock data for the time being\n      let projectList = [\n        {\n          title: \"10K Challenge\",\n          description: \"10K Description\",\n          route: \"#10KChallenge\",\n        },\n        {\n          title: \"Universities for Founders MTY\",\n          description: \"Universities for Founders Description\",\n          route: \"#UniversitiesForFounders\",\n        },\n        {\n          title: \"Universities for Founders MTY\",\n          description: \"Universities for Founders Description\",\n          route: \"#UniversitiesForFounders\",\n        },\n        {\n          title: \"Universities for Founders MTY\",\n          description: \"Universities for Founders Description\",\n          route: \"#UniversitiesForFounders\",\n        },\n        {\n          title: \"Universities for Founders MTY\",\n          description: \"Universities for Founders Description\",\n          route: \"#UniversitiesForFounders\",\n        },\n        {\n          title: \"Universities for Founders MTY\",\n          description: \"Universities for Founders Description\",\n          route: \"#UniversitiesForFounders\",\n        },\n      ];\n\n      //const projectChunks = splitProjects(projectList);\n\n      setProjects(projectList);\n    };\n\n    fetchProjects();\n  }, []);\n\n  return (\n    <div>\n      <Container fluid className=\"px-5\">\n        <h1>Proyectos</h1>\n        <Row>\n          <Col>\n            <CardColumns>\n              {projects\n                ? projects.map((project, i) => (\n                    <CardComponent\n                      title={project.title}\n                      description={project.useEffect}\n                      route={project.route}\n                    />\n                  ))\n                : \"\"}\n            </CardColumns>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default Proyectos;\n"]},"metadata":{},"sourceType":"module"}