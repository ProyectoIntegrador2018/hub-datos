{"ast":null,"code":"var _jsxFileName = \"/Users/emilioalonso/Documents/Integrador/hub-datos/src/Proyectos.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport CardRow from \"./components/CardRow\";\nimport \"./App.css\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\n\nfunction Proyectos() {\n  const [projects, setProjects] = useState(null);\n\n  const splitProjects = projectList => {\n    // split projects into chunks of 5 to map in the card rows\n    const projectChunks = [];\n\n    while (projectList.length) {\n      projectChunks.push(projectList.splice(0, 3));\n    }\n\n    return projectChunks;\n  };\n\n  useEffect(() => {\n    const fetchProjects = async () => {\n      /* code needed later to fetch data needed for the page\n      const { data } = await axios(`${URI}/ruta/del/endpoint`);\n      const { totalPages, page } = data;\n      const projectList = data.projects;\n      */\n      // mock data for the time being\n      let projectList = [{\n        title: \"10K Challenge\",\n        description: \"10K Description\",\n        route: \"#10KChallenge\"\n      }, {\n        title: \"Universities for Founders MTY\",\n        description: \"Universities for Founders Description\",\n        route: \"#UniversitiesForFounders\"\n      }, {\n        title: \"Universities for Founders MTY\",\n        description: \"Universities for Founders Description\",\n        route: \"#UniversitiesForFounders\"\n      }, {\n        title: \"Universities for Founders MTY\",\n        description: \"Universities for Founders Description\",\n        route: \"#UniversitiesForFounders\"\n      }, {\n        title: \"Universities for Founders MTY\",\n        description: \"Universities for Founders Description\",\n        route: \"#UniversitiesForFounders\"\n      }, {\n        title: \"Universities for Founders MTY\",\n        description: \"Universities for Founders Description\",\n        route: \"#UniversitiesForFounders\"\n      }];\n      const projectChunks = splitProjects(projectList);\n      setProjects(projectChunks);\n    };\n\n    fetchProjects();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"px-5 pb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Proyectos\"), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, projects ? projects.map((projectDeck, i) => /*#__PURE__*/React.createElement(CardRow, {\n    projects: projectDeck,\n    rowNumber: i + 1,\n    key: `project_row_${i + 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 19\n    }\n  })) : \"\"))));\n}\n\nexport default Proyectos;","map":{"version":3,"sources":["/Users/emilioalonso/Documents/Integrador/hub-datos/src/Proyectos.js"],"names":["React","useEffect","useState","Container","CardRow","Col","Row","Proyectos","projects","setProjects","splitProjects","projectList","projectChunks","length","push","splice","fetchProjects","title","description","route","map","projectDeck","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAO,WAAP;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;;AAEA,SAASC,SAAT,GAAqB;AACnB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,IAAD,CAAxC;;AAEA,QAAMQ,aAAa,GAAIC,WAAD,IAAiB;AACnC;AACF,UAAMC,aAAa,GAAG,EAAtB;;AACA,WAAOD,WAAW,CAACE,MAAnB,EAA2B;AACzBD,MAAAA,aAAa,CAACE,IAAd,CAAmBH,WAAW,CAACI,MAAZ,CAAmB,CAAnB,EAAsB,CAAtB,CAAnB;AACD;;AAED,WAAOH,aAAP;AACD,GARD;;AAUAX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,aAAa,GAAG,YAAY;AAChC;;;;;AAMA;AACA,UAAIL,WAAW,GAAG,CAChB;AACEM,QAAAA,KAAK,EAAE,eADT;AAEEC,QAAAA,WAAW,EAAE,iBAFf;AAGEC,QAAAA,KAAK,EAAE;AAHT,OADgB,EAMhB;AACEF,QAAAA,KAAK,EAAE,+BADT;AAEEC,QAAAA,WAAW,EAAE,uCAFf;AAGEC,QAAAA,KAAK,EAAE;AAHT,OANgB,EAWhB;AACEF,QAAAA,KAAK,EAAE,+BADT;AAEEC,QAAAA,WAAW,EAAE,uCAFf;AAGEC,QAAAA,KAAK,EAAE;AAHT,OAXgB,EAed;AACAF,QAAAA,KAAK,EAAE,+BADP;AAEAC,QAAAA,WAAW,EAAE,uCAFb;AAGAC,QAAAA,KAAK,EAAE;AAHP,OAfc,EAoBhB;AACEF,QAAAA,KAAK,EAAE,+BADT;AAEEC,QAAAA,WAAW,EAAE,uCAFf;AAGEC,QAAAA,KAAK,EAAE;AAHT,OApBgB,EAyBhB;AACEF,QAAAA,KAAK,EAAE,+BADT;AAEEC,QAAAA,WAAW,EAAE,uCAFf;AAGEC,QAAAA,KAAK,EAAE;AAHT,OAzBgB,CAAlB;AAgCA,YAAMP,aAAa,GAAGF,aAAa,CAACC,WAAD,CAAnC;AAEAF,MAAAA,WAAW,CAACG,aAAD,CAAX;AACD,KA3CD;;AA6CAI,IAAAA,aAAa;AACd,GA/CQ,EA+CN,EA/CM,CAAT;AAiDA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAiB,IAAA,SAAS,EAAC,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,QAAQ,GACLA,QAAQ,CAACY,GAAT,CAAa,CAACC,WAAD,EAAcC,CAAd,kBACX,oBAAC,OAAD;AACE,IAAA,QAAQ,EAAED,WADZ;AAEE,IAAA,SAAS,EAAEC,CAAC,GAAG,CAFjB;AAGE,IAAA,GAAG,EAAG,eAAcA,CAAC,GAAG,CAAE,EAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADK,GAQL,EATN,CADF,CAFF,CADF,CADF;AAoBD;;AAED,eAAef,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport CardRow from \"./components/CardRow\";\nimport \"./App.css\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\n\nfunction Proyectos() {\n  const [projects, setProjects] = useState(null);\n\n  const splitProjects = (projectList) => {\n      // split projects into chunks of 5 to map in the card rows\n    const projectChunks = [];\n    while (projectList.length) {\n      projectChunks.push(projectList.splice(0, 3));\n    }\n\n    return projectChunks;\n  };\n\n  useEffect(() => {\n    const fetchProjects = async () => {\n      /* code needed later to fetch data needed for the page\n      const { data } = await axios(`${URI}/ruta/del/endpoint`);\n      const { totalPages, page } = data;\n      const projectList = data.projects;\n      */\n\n      // mock data for the time being\n      let projectList = [\n        {\n          title: \"10K Challenge\",\n          description: \"10K Description\",\n          route: \"#10KChallenge\",\n        },\n        {\n          title: \"Universities for Founders MTY\",\n          description: \"Universities for Founders Description\",\n          route: \"#UniversitiesForFounders\",\n        },\n        {\n          title: \"Universities for Founders MTY\",\n          description: \"Universities for Founders Description\",\n          route: \"#UniversitiesForFounders\",\n        },{\n          title: \"Universities for Founders MTY\",\n          description: \"Universities for Founders Description\",\n          route: \"#UniversitiesForFounders\",\n        },\n        {\n          title: \"Universities for Founders MTY\",\n          description: \"Universities for Founders Description\",\n          route: \"#UniversitiesForFounders\",\n        },\n        {\n          title: \"Universities for Founders MTY\",\n          description: \"Universities for Founders Description\",\n          route: \"#UniversitiesForFounders\",\n        }\n      ];\n\n      const projectChunks = splitProjects(projectList);\n\n      setProjects(projectChunks);\n    };\n\n    fetchProjects();\n  }, []);\n\n  return (\n    <div className=\"pb-3\">\n      <Container fluid className=\"px-5 pb-5\">\n        <h1>Proyectos</h1>\n        <Row>\n          <Col>\n            {projects\n              ? projects.map((projectDeck, i) => (\n                  <CardRow\n                    projects={projectDeck}\n                    rowNumber={i + 1}\n                    key={`project_row_${i + 1}`}\n                  />\n                ))\n              : \"\"}\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default Proyectos;\n"]},"metadata":{},"sourceType":"module"}